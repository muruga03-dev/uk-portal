{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\murug\\\\Downloads\\\\udaikulam-village-portal (1)\\\\client\\\\src\\\\pages\\\\Workers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Workers = () => {\n  _s();\n  const [workers, setWorkers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWorkers = async () => {\n      try {\n        // ✅ Correct endpoint (adjust if your backend path differs)\n        const res = await axios.get(\"http://localhost:5000/api/admin/workers\");\n        setWorkers(res.data);\n      } catch (err) {\n        console.error(\"Error fetching workers:\", err);\n        setError(\"Failed to load worker types. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWorkers();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-lg font-semibold\",\n      children: \"Loading workers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-red-600 font-semibold\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Worker Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), workers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 text-lg text-center\",\n      children: \"No worker types available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: workers.map(worker => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-4 shadow hover:shadow-lg transition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold\",\n          children: worker.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: worker.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, worker._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Workers, \"9p1owozLAgOX51X4V5GililgdYU=\");\n_c = Workers;\nexport default Workers;\nvar _c;\n$RefreshReg$(_c, \"Workers\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Workers","_s","workers","setWorkers","loading","setLoading","error","setError","fetchWorkers","res","get","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","worker","type","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/murug/Downloads/udaikulam-village-portal (1)/client/src/pages/Workers.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Workers = () => {\n  const [workers, setWorkers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchWorkers = async () => {\n      try {\n        // ✅ Correct endpoint (adjust if your backend path differs)\n        const res = await axios.get(\"http://localhost:5000/api/admin/workers\");\n        setWorkers(res.data);\n      } catch (err) {\n        console.error(\"Error fetching workers:\", err);\n        setError(\"Failed to load worker types. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWorkers();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"p-8 text-center text-lg font-semibold\">\n        Loading workers...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-8 text-center text-red-600 font-semibold\">\n        {error}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-8 max-w-5xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6\">Worker Types</h2>\n      \n      {workers.length === 0 ? (\n        <p className=\"text-gray-600 text-lg text-center\">\n          No worker types available.\n        </p>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {workers.map((worker) => (\n            <div\n              key={worker._id}\n              className=\"border rounded p-4 shadow hover:shadow-lg transition\"\n            >\n              <h3 className=\"text-xl font-semibold\">{worker.type}</h3>\n              <p className=\"text-gray-700\">{worker.description}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Workers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}